import math
def id(x):
    if math.isfinite(x):
        return x
    else:
        return 0
def div(x,y):
    if math.isfinite(x) and math.isfinite(y) and 0!=y:
        return x/y
    else:
        return 0
def qfa(f,a=0,b=1,patience=10,epsz=1e-12,wanna_print=False):
  _qfc=[
  0.0051282051282051282051282051282051281759,
  0.048699387295088238550645108490909649756,
  0.097820391676052159128537348618992594511,
  0.13966507849560431803157492542792136238,
  0.17560578900106674676537594695346634661,
  0.20205146748238357363676732792567368935,
  0.21888151163057340179839439673523336642,
  0.22429633858205286776715348143919572482,
  0.21888151163057340179839439673523336641,
  0.20205146748238357363676732792567368937,
  0.17560578900106674676537594695346634660,
  0.13966507849560431803157492542792136237,
  0.097820391676052159128537348618992594505,
  0.048699387295088238550645108490909649754,
  0.0051282051282051282051282051282051281921
  ] 
  _qfxx=[
  -1.0000000000000000000000000000000000000,
  -0.99371220989324258353314824194737869715,
  -0.97492791218182360701813168299393121723,
  -0.94388333030836756289526360715103662152,
  -0.90096886790241912623610231950744505116,
  -0.84672419922828416835277581626296527151,
  -0.78183148246802980870844452667405775024,
  -0.70710678118654752440084436210484903929,
  -0.62348980185873353052500488400423981064,
  -0.53203207651533656355763036723037073017,
  -0.43388373911755812047576833284835875461,
  -0.33027906195516708177487761259657237031,
  -0.22252093395631440428890256449679475947,
  -0.11196447610330785846870593527202420326,
  0,
  0.11196447610330785846870593527202420326,
  0.22252093395631440428890256449679475947,
  0.33027906195516708177487761259657237031,
  0.43388373911755812047576833284835875461,
  0.53203207651533656355763036723037073017,
  0.62348980185873353052500488400423981063,
  0.70710678118654752440084436210484903928,
  0.78183148246802980870844452667405775023,
  0.84672419922828416835277581626296527151,
  0.90096886790241912623610231950744505116,
  0.94388333030836756289526360715103662152,
  0.97492791218182360701813168299393121723,
  0.99371220989324258353314824194737869715,
  1.0000000000000000000000000000000000000
  ] 
  _qfcc=[
  0.0012771392081736909323116219667943805384,
  0.012261863082965059183757260672587997397,
  0.025073542949876119982835702556885437729,
  0.037003488124485205952410988595758198919,
  0.048714184513998659016006832920198121119,
  0.059671722500291530510800360039061795198,
  0.069971720188124901715360725785693207337,
  0.079324399141810206291234242539439122598,
  0.087731808647660728388301226283541406525,
  0.094993231127670812935868864274475598423,
  0.10109644009839900606731621967353236674,
  0.10589618899078746036382490403487686430,
  0.10939348026402093482773831077366493146,
  0.11148767663607657022825919082719761136,
  0.11220622905131822720794709811258591222,
  0.11148767663607657022825919082719761137,
  0.10939348026402093482773831077366493147,
  0.10589618899078746036382490403487686430,
  0.10109644009839900606731621967353236673,
  0.094993231127670812935868864274475598407,
  0.087731808647660728388301226283541406539,
  0.079324399141810206291234242539439122596,
  0.069971720188124901715360725785693207342,
  0.059671722500291530510800360039061795189,
  0.048714184513998659016006832920198121113,
  0.037003488124485205952410988595758198910,
  0.025073542949876119982835702556885437708,
  0.012261863082965059183757260672587997395,
  0.0012771392081736909323116219667943805590
  ] 
  if a==b: return 0
  if a>b: return -qfa(f,b,a,patience,epsz,wanna_print)
  if a==-math.inf and b==math.inf:
      return qfa(lambda x:f(div(x,(1-x**2)))*div((1+x**2),(1-x**2)**2),-1,1,patience,epsz,wanna_print)
  if math.isfinite(a) and b==math.inf:
      return qfa(lambda x:div(f(a+div(x,(1-x))),(1-x)**2),0,1,patience,epsz,wanna_print) 
  if a==-math.inf and math.isfinite(b):
      return qfa(lambda x:div(f(b-div(x,(1-x))),(1-x)**2),0,1,patience,epsz,wanna_print)
  F=lambda x:id(f(x))
  if wanna_print:
    print("a =",a,"b =",b,"patience =",patience)
  fxx=list(F((a+b)/2+(b-a)/2*_qfxxi) for _qfxxi in _qfxx)
  fx=list(fxx[2*i] for i in range(len(_qfc))) 
  H=(b-a)/2*sum(_qfcc[i]*fxx[i] for i in range(len(_qfcc)))
  L=(b-a)/2*sum(_qfc[i]*fx[i] for i in range(len(_qfc)))
  if abs(L-H)<epsz:
    return H
  if patience>0:
    m=(a+b)/2 
    return qfa(F,a,m,patience-1,epsz,wanna_print)+qfa(F,m,b,patience-1,epsz,wanna_print)
  return H

r"""
    Sample run.

>>> f=lambda x:math.sin(34*math.cos(12*math.pi*x));a=0;b=math.sqrt(2);I=0.0013958465440407288112814894719777562564;qfa(f,a,b)-I
-2.675810961694225e-16
>>> qfa(lambda x:abs(x-0.123),0,1)-0.392129
-6.252259820982431e-11
>>> qfa(lambda x:abs(x-0.123),0,1,20)-0.392129
1.8501866705378234e-13
>>> qfa(lambda x:abs(x-0.123),0,1,20,1e-16)-0.392129
-5.551115123125783e-17
>>> qfa(lambda x:math.exp(x)*math.cos(x),0,math.pi/2)-0.5*(-1+math.exp(0.5*math.pi))
-4.440892098500626e-16
>>> qfa(lambda x:math.exp(-math.pi*x**2),-math.inf,math.inf)-1
0.0
>>> qfa(lambda x:1/(1+x**2),-math.inf,math.inf)-math.pi
-4.9888250321927785e-06
>>> qfa(lambda x:1/(1+x**2),-math.inf,math.inf,50,1e-16)-math.pi
0.0
>>> qfa(lambda x:x*math.log(x*(x>0)+(x<=0)),0,1)-(-1/4)
4.207745263329343e-14
>>> qfa(lambda x:x*math.log(x*(x>0)+(x<=0)),0,1,20,1e-16)-(-1/4)
0.0
>>> qfa(lambda x:math.log(abs(x-0.123)),0,1)-(-1.372859970960925)
-2.267836396674383e-05
>>> qfa(lambda x:math.log(abs(x-0.123)),0,1,50,1e-17)-(-1.372859970960925)
0.0
>>> qfa(lambda x:qfa(lambda y:div(1,(1-x*y)),0,1),0,1)-math.pi**2/6
-1.42721130114154e-06
>>> qfa(lambda x:qfa(lambda y:div(1,(1-x*y)),0,1,25),0,1,25)-math.pi**2/6
-4.355538152367444e-11
>>> qfa(lambda x:qfa(lambda y:1/(1+x*y),0,1),0,1)-math.pi**2/12
1.1102230246251565e-16

"""
